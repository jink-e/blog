import{_ as e,r as p,o,c as l,a as n,b as s,d as t,e as c}from"./app-RnerZAOR.js";const r={},i=n("h1",{id:"play-with-react-query",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#play-with-react-query"},[n("span",null,"play with react-query")])],-1),u={href:"https://github.com/tannerlinsley/react-query",target:"_blank",rel:"noopener noreferrer"},k=c(`<h2 id="解决什么问题" tabindex="-1"><a class="header-anchor" href="#解决什么问题"><span>解决什么问题</span></a></h2><ul><li>缓存请求的数据</li><li>将多个重复请求合并成一个，避免多余的网络开销</li><li>自动更新过期缓存数据</li><li>知道什么时候缓存数据过期了</li><li>快速更新缓存数据</li><li>管理服务端状态的内存/垃圾回收</li><li>结构化存储请求的数据，根据 key-value 取值</li></ul><h2 id="show-me-the-code" tabindex="-1"><a class="header-anchor" href="#show-me-the-code"><span>show me the code</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>QueryClient<span class="token punctuation">,</span> QueryClientProvider<span class="token punctuation">,</span> useQuery<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-query&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> queryClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>QueryClientProvider client<span class="token operator">=</span><span class="token punctuation">{</span>queryClient<span class="token punctuation">}</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>Example <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>QueryClientProvider<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">Example</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span>isLoading<span class="token punctuation">,</span> error<span class="token punctuation">,</span> data<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useQuery</span><span class="token punctuation">(</span><span class="token string">&#39;repoData&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;https://api.github.com/repos/tannerlinsley/react-query&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
      <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>isLoading<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">&#39;Loading...&#39;</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">&#39;An error has occurred: &#39;</span> <span class="token operator">+</span> error<span class="token punctuation">.</span>message<span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span><span class="token punctuation">{</span>data<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span><span class="token punctuation">{</span>data<span class="token punctuation">.</span>description<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>strong<span class="token operator">&gt;</span>👀 <span class="token punctuation">{</span>data<span class="token punctuation">.</span>subscribers_count<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>strong<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token string">&#39; &#39;</span><span class="token punctuation">}</span>
      <span class="token operator">&lt;</span>strong<span class="token operator">&gt;</span>✨ <span class="token punctuation">{</span>data<span class="token punctuation">.</span>stargazers_count<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>strong<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token string">&#39; &#39;</span><span class="token punctuation">}</span>
      <span class="token operator">&lt;</span>strong<span class="token operator">&gt;</span>🍴 <span class="token punctuation">{</span>data<span class="token punctuation">.</span>forks_count<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>strong<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="有趣的-devtool" tabindex="-1"><a class="header-anchor" href="#有趣的-devtool"><span>有趣的 devtool</span></a></h2><p>会在页面上添加一个浮动按钮，点击可以查看 query 的记录，好比一个简化的 redux 的 devtool</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>ReactQueryDevtools<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-query/devtools&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>QueryClientProvider client<span class="token operator">=</span><span class="token punctuation">{</span>queryClient<span class="token punctuation">}</span><span class="token operator">&gt;</span>
      <span class="token punctuation">{</span><span class="token comment">/* The rest of your application */</span><span class="token punctuation">}</span>
      <span class="token operator">&lt;</span>ReactQueryDevtools initialIsOpen<span class="token operator">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>QueryClientProvider<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),d={href:"https://react-query.tanstack.com/overview",target:"_blank",rel:"noopener noreferrer"};function v(m,h){const a=p("ExternalLinkIcon");return o(),l("div",null,[i,n("p",null,[n("a",u,[s("react-query"),t(a)]),s(" 是一个轻量级的状态管理工具，注重于解决异步请求数据的缓存问题，相比于使用 redux 来管理请求数据的状态/缓存，react-query 更加轻便简单，只需要使用 useQuery 就可以自动实现数据的缓存和管理, 还可以使用 useIsFetching 来监听全局加载状态")]),k,n("p",null,[n("a",d,[s("更多文档"),t(a)])])])}const b=e(r,[["render",v],["__file","2021-01-25-play-with-react-query.html.vue"]]),g=JSON.parse('{"path":"/posts/2021-01-25-play-with-react-query.html","title":"play with react-query","lang":"en-US","frontmatter":{"date":"2021-01-25T09:40:34.000Z","category":["dev"],"tag":["react"]},"headers":[{"level":2,"title":"解决什么问题","slug":"解决什么问题","link":"#解决什么问题","children":[]},{"level":2,"title":"show me the code","slug":"show-me-the-code","link":"#show-me-the-code","children":[]},{"level":2,"title":"有趣的 devtool","slug":"有趣的-devtool","link":"#有趣的-devtool","children":[]}],"git":{"updatedTime":1709547738000,"contributors":[{"name":"jinke","email":"jinke.yu@outlook.com","commits":1}]},"filePathRelative":"posts/2021-01-25-play-with-react-query.md","excerpt":"\\n<p><a href=\\"https://github.com/tannerlinsley/react-query\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">react-query</a> 是一个轻量级的状态管理工具，注重于解决异步请求数据的缓存问题，相比于使用 redux 来管理请求数据的状态/缓存，react-query 更加轻便简单，只需要使用 useQuery 就可以自动实现数据的缓存和管理, 还可以使用 useIsFetching 来监听全局加载状态</p>\\n<h2>解决什么问题</h2>\\n<ul>\\n<li>缓存请求的数据</li>\\n<li>将多个重复请求合并成一个，避免多余的网络开销</li>\\n<li>自动更新过期缓存数据</li>\\n<li>知道什么时候缓存数据过期了</li>\\n<li>快速更新缓存数据</li>\\n<li>管理服务端状态的内存/垃圾回收</li>\\n<li>结构化存储请求的数据，根据 key-value 取值</li>\\n</ul>"}');export{b as comp,g as data};
